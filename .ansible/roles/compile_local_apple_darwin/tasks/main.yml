---
- name: Compile locally on macOS for x86_64-apple-darwin
  delegate_to: localhost
  block:
    - name: Check if Rust is properly configured
      shell: |
        if [ -f "$HOME/.cargo/env" ]; then
          source "$HOME/.cargo/env"
        fi
        which cargo && cargo --version
      register: rust_check_local
      ignore_errors: yes
      changed_when: false
    
    - name: Fail if Rust/Cargo is not available
      fail:
        msg: "Rust/Cargo is not installed or not in PATH. Please ensure Rust is installed and available."
      when: rust_check_local.rc != 0
    
    - name: Ensure x86_64-apple-darwin target is installed
      shell: |
        if [ -f "$HOME/.cargo/env" ]; then
          source "$HOME/.cargo/env"
        fi
        rustup target add x86_64-apple-darwin
      register: target_add
      changed_when: "'already installed' not in target_add.stdout"
    
    - name: Build the project locally for x86_64-apple-darwin
      shell: |
        if [ -f "$HOME/.cargo/env" ]; then
          source "$HOME/.cargo/env"
        fi
        cargo build --release --target x86_64-apple-darwin
      args:
        chdir: "{{ playbook_dir }}/../"
        executable: /bin/bash
      register: build_result_local
    
    - name: Display local build output
      debug:
        var: build_result_local.stdout_lines
      when: build_result_local.stdout_lines is defined
    
    - name: Check if binaries were built successfully
      stat:
        path: "{{ playbook_dir }}/../target/x86_64-apple-darwin/release/{{ item }}"
      register: binary_stats
      loop:
        - happytest
        - reader
    
    - name: Fail if any binary not found
      fail:
        msg: "Binary not found: {{ item.item }}"
      when: not item.stat.exists
      loop: "{{ binary_stats.results }}"

- name: Ensure reader_base_path exists on remote
  file:
    path: "{{ reader_base_path }}"
    state: directory
    owner: "{{ reader_user }}"
    group: "{{ reader_group }}"
    mode: '0755'

- name: Create bin directory on remote
  file:
    path: "{{ reader_base_path }}/bin"
    state: directory
    owner: "{{ reader_user }}"
    group: "{{ reader_group }}"
    mode: '0755'

- name: Transfer compiled happytest binary to remote server
  copy:
    src: "{{ playbook_dir }}/../target/x86_64-apple-darwin/release/happytest"
    dest: "{{ reader_base_path }}/bin/happytest"
    owner: "{{ reader_user }}"
    group: "{{ reader_group }}"
    mode: '0755'

- name: Transfer compiled reader binary to remote server
  copy:
    src: "{{ playbook_dir }}/../target/x86_64-apple-darwin/release/reader"
    dest: "{{ reader_base_path }}/bin/reader"
    owner: "{{ reader_user }}"
    group: "{{ reader_group }}"
    mode: '0755'

- name: Display binary locations
  debug:
    msg: 
      - "Binaries compiled locally and transferred to remote server:"
      - "  - {{ reader_base_path }}/bin/happytest"
      - "  - {{ reader_base_path }}/bin/reader"